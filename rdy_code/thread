#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>

#define NUM_THREADS 5

void* thread_function(void* arg) {
    int thread_id = *((int*)arg);
    printf("Thread %d is running\n", thread_id);
    pthread_exit(NULL);
}

int thread() {
    pthread_t threads[NUM_THREADS];
    int thread_args[NUM_THREADS];
    int result_code;

    for (int i = 0; i < NUM_THREADS; ++i) {
        thread_args[i] = i;
        printf("Thread: creating thread %d\n", i);
        result_code = pthread_create(&threads[i], NULL, thread_function, (void*)&thread_args[i]);
        if (result_code) {
            printf("Error: unable to create thread, %d\n", result_code);
            exit(-1);
        }
    }

    /* Wait for threads to complete */
    for (int i = 0; i < NUM_THREADS; ++i) {
        result_code = pthread_join(threads[i], NULL);
        if (result_code) {
            printf("Error: unable to join thread, %d\n", result_code);
            exit(-1);
        }
        printf("Thread: completed join with thread %d\n", i);
    }

    printf("Thread: program completed. Exiting.\n");
    pthread_exit(NULL);
}

